# Automatically generated on 2020-07-06 UTC from https://codemagic.io/app/5f03816ef9cfa6000e6d3b49/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    max_build_duration: 60
    environment:
      vars:
        SSH_KEY: Encrypted(Z0FBQUFBQmZBNlZ5azBJbEtaS2NQaWZxejRRenUyTTQtQU9LR0xPUU1EbkN3bENJaFdaT09xOVE5UlpNTEU4Zk5QQXFwYksydzREWkNoOFdLaVNsQjNrSVMwRUd2blBSUmVsTVRleUZmWm5BNEdfRGV5TDhtU0FRNllsTlVfQ2FuY3MyYktwMnc5emtwY0JDX1BZZE1XLUVMNG83Y3R6d0UzdkxCeE00Z3dDTzdVNU5wdmZjUmk0V0hLb2RUSWhOY1RmNGJ4QUtqbU9jNkVjLVRXRXJLWVAzaThsN09IRFI0MUViMGxkQ0lUUjdSM0R5WFpISnkzdEVQQ0dtUFdFVEVreHJ6RWJpel8yWXJfdFluNzFrSTBzNmtVZ2FfNWZFZ0I1cG9PcHlsTEVVWWNRVUV2RzMxd19oc2F1cklzXzBQNm1nOXFrYVdsZ0JjU08ydXNzeTJLTjZnYURZZEY5N0xIVnI1ZWlkeXBzbU83MXVQejlKYkRDUXI5Nk1JT0l4VFppTWhaaVlfZ212eER0blNEbEtuQ3BMcUNheXBnMUE2Q0U3VTNxREgwYWJDbmI4R3NBYlFHSHhFWnNHcHpMck5peDlwSmt1bEVkTzg4REgtUTItdktFVWR1Y3JuSHhiMkp1R1psbjBHSktGWEFrTVJMMFF5WDZweU1YUkRuczd1dGhpa0gyQ2RDV0ZXT1ZoX3lGTFdsOVNhTVNPQ0E5TGM3N3VkMHk4NjFmemkteEZSZU1sUVhjOHBmcV8yWjUybTRMVEFHZEFNcy1zSTM4SzFzM0VpWkZwNTA2V3ZxSmZlZ3FMV3I4eVVZOThXR2M1V0tsR0R3RWtuYUh3RS0tc0UxQmhtUzlXVWtSdDRwQWtpMDRmb0JyYmV4RFhOblBYRzFMVkNVVWFHNVRqaXdVRHA1VUQydmdKclp5WUxyYm1sSFpiNWJnaGFCVElKVmtOQV9LLXdPcERXWENsSW00cTFBbGpQSmJCRk4yNUg2UXpqVEhGYzVaZWt2SmVob1JmX1AyUmlyZWt6b1F0czk1aWdkOGdWQ0JnVGJjeWxDakJYWDQxb0U3OHVKOFJyYWNmelZVOE5nTXBXUDdTbDBxRlZlY1gtaWZEd3JMbG0xMndzN19mZFQ0eDY1N0tLanRNUU8xeXlmWl9GT0xZdVh3TkZwTUNZV1R0UzNvRXJ1elh6SmFBY1E0dVhpWUlhZTJvRzRKd2psOWVKTWFkRWZsQm5vbTdDM3NRT3hiWHhuSGFpYjNkVmpzUGtmTmJDU3JUYnM4YVBGVUtDZjktbWN2bmRBWWpxVWlBQzl4c2Ffcll5cUo0NldPVWNUdVY0R09veWhCNkRLUjVBdjNsZm8zTk1nc1dGcnBza3NhZGlQaDU3U0x0TkpyWFh3LWpGY3BMblREWTVhYV9KTkRpUHdWNHZ4MWV6OWdrR0VSRWtwVXUxcTgycmpDTFlFYml3eGFWZkZtY3BVUlpWaGJkXzFFelZwRkhiTXNwRV9DZFJFR3V5N29OT2NEYWV4a2otMVFsTDJ6VWFuZzZrekRQbldWMXQwalNOcU4xNGxUaWZWMnBkOXhZOW1IMDFDS181aXZWS2poTzVJOXlTTmhDRnRZRXZFMklTbmtyY2poTUlneEhxblhDTmxCdEFNNlp0VjhhWFgxVTFZc2FCYTJvYUEzek5HcTZlbFZEUzFmc3d2WXZNeV9kUmNGektUcU9HVHpYa0J6UmVsSUYtNmNyLVFHUUM4TFVndXFKVFBwbFhoOXhPVG1LekI5ck05RnRLMDNJbmlEckZpakpic3VUcnI5aVJmd1BxOWJxdjJXRzBrR1VMS3JXcHVMRDJVaUtucGdpQXUyN0tPZzI5TmdoOFB3b2xOei1XazBOSEFKS1JHNUNtSDdZUkZ0M0JjT2xRenN2QW5CYkVFTTVxVExUMFFfTi1OZzNsbnZPSzJBUHpLRU1DMGZVUjVsTG43cnpYd1hKYUhscEZBRVpkZnVBSDA1MV84eWJfUGdiajdlWGN4UWZZOW5hakhoNnJ2NW5sM0JrRUJLWUNPdnhBRDh5eDV5UXlKUzQyRWxJNEJ6ZDhhVnNrRUJUUUdYbFpiaHFMOGlnaWc3R0hTUmVvM24xV0FNWU9KV1VCelZheWUxOGI4U0Y2aEhVb0dFMGl6d29BMkVTY3A3TVJsbHdkcnNxMHE5Zmpva3ppQ29EbTNleWk3d1JmLV9nVUJaMzNfOWdRNVNlUU16Q0JNSHI4d0JXdDFOS2kyRHlJdTVmXzBNWkxwb3JYcmVTSVNBU2diREptNEx2cjVaOVo4MEVuR3pTMTktcUVUTjFYM3c1MEdVMU5PdjhBQUI5VVR5VF9fWmY1YnBCV1JtX2hVX2F4RWNXc3NudmhKN1pJS2s4T3NCSFZFY0U5azZKckt2YzZ0R2ROZ29wVUdVZHJMNHdQM1RvcVp1NEpSRlhUakc2dWlkYVpSRGF5OVlaOWVnaTcxSFZRcldVeWZoWWc1US1iNkFmSXZBT3M3S3l0dkZtV2UzOHhqMG9sLXlxNXV2SzBya0RFSDRLSFNjWWlvdXVNczJTcmVVSjJEOVFlM09xZmIyS1NUNXdqcUVPdXZES25XNkh4Y2xpYWpjY0w1akc5M2Z4TkY3c0h4MnI0ZjdFdVhsdXVpNnFvYkpkTWxQQXFWLWk1WFFsWUdYTzNkUXlGbl9XM0gwTjVESU5BRmthaVhxLVMtbmxYNWVjRS1GeTVJeHphVzhXZXVrUzZjYXNhb0NzbUNHX19uUGpsY1FienItazB6cGpvSl83VE1HVnBUbU1kNzJrc1RESEZhb3Boc3lWZHNsUzVGbF8wNXJWcWVtUVRFTkhibXNyMTBvQjBpdjFjR3RwcVVmb3l6U3BuZUJYT1draVY1OEhLdWpiUVMydWk4TmdIUi05V1R4MXpOX0lhbzdHb0Y2NGFHS3ZxVk9tVWlTN3hoa3h4azEzNWMxM2dRWVZqR2NxVS0xVXZrYmtnRVNvc0U4WEY3QUt5YWtJbEFTazBPUDZsY3Q2RmdHWWFnWTBaYW8zTHNjelpiVUVZUEpNUnB0MUQ1SjZDeWQ0R0k4TldOTDV3T1JMZUJDNnBlVXRCV09sOUxIQTEySHFSSVhYUnFEVGxsX0JGbEJXUHBQaHdnQWQ0N0szMjJQV2FSZE41anJKa0gtTUtLQThLTDFtTWpzZDk2bk9QejVWNWhKSmRTYVY0eWNPWFhKLUhuYVRYR1ZoMTZJenlCa1FIdmgzRkxFbGpwanlsdnZYMjNzNldEMlNkQ2Vyb1RSSktkZ0Zobk1HV3BCdS0yX0l0R3BxLWgyQTZCQjJyek1NZk1Xd0pqVWVVTU1haHRFc0JhbkExVmpyRnk0bENrY1I2eW90Y1lDR01zaFE4VE9ra2NEdk8zVUo2UGdaY1pveDNTOTd6WHRVSS1jeXFqY2sxUGlwaWx4aE5OMklBbXo2c0tSdzdkeThoOEYyY0l6VjNJTllIQi1UMncyRDNhLXNqOHJmaDJFVWdOSkcwVUhjSDcwUHczb0k1SXMtbTNBWmxWWmVMWmYzQUN3bmxacXJWUU80NFZVLWZyUExfNkN3ODVXSTlUTHFQYkZLTjJvMTUycXZ4SnE5NXBXeGZGN3d2YU0wUmRzQ1lHZTVQVTBrQ2RDUzQ2U2hsRUFTNTMxaVBpRDVTVUdUdmtOeGUzdG5obXBacElSa3pjOUo4RGZqMzZuZ3YxODI5YnhSOXQ3ZlJEV2FYTnhZeUZ5RDBjWV94aGI4cHMyeG9GVWp2dWhBODJXOWxDZ0pvQUhITDdEcDAxa3JGQy00bS1yaEw5dzBEQ3p6Ui1LM2N3VG1sVDJsbDR1QTNhLWRfdjBjMFlJMDdWdlo1cVN6eWl0Y3h3MUVNeTNrd0Y4QmVNLTRiRGYwaGhfVkVGVF80ajVrRDlkWXdEYTlId29zOFNiQlFYbDREX3dmMTloc0IwdFJCWGpaWVVOcVg3MW5WOVJPM0RNeXlXd2JMQlg1TEhSWEg2ZDdzbDVqU1BQVTg5bUhfUF8yWmZ6U0x0VFppbGQ2MFkyWjdnM0g5cll1LU10SjQ5a0pXZE81U1ZMdjIzWEZ2SmFrYWxRcWtQQm9oZmFIQVR6MmdFdG5oUElMU252TnlfX2pmaHNrdUxTaExENkIyblVmcGhlOFdoVm84dzBhckl4X1J1R1B2ak5vaHYxdkVoZDNCTnJqdEZYVllqX3ZieUcxNXc3WktTSE5CNFdVN0dPVmtBdmJPT3pHTzM0ZUZCNjBOOG9rY05IXzM3dlhsVnRXSDgwaUpqWjZaVnVieExQQnp3VGlDNEZFSU5fU0Y0amhNSDBrRmNyWjBuU2NBQ2VrZlFNTlExTUNVQnhDY0FHMWtwRnZMYzVxNlBxaHlZM05XcXFQTWJfcEwzdXo3RjF3Q2h3bTZ0MlpKUjVJbHUtYkdadEZpWVhPQXB6cE81NG80bjhBZk1sQ3dXT3dJZV93LVBjQjJRVWJKaDFVSWhZRWlGSVZSYzJaQ05id19WclFJOHVMbjFNQlNIWld6U2oyTkY1OUdWUlFPMUJRQmM1eHkzQ01RS3BKQWZuc09lTERUWGVMSWRsVUs2eUFVMWZuYW54dF9zQnFCZTlKMVBNTTVoSUdMaVVVeGt2c0Y0cVh6RVlkS0VpdU1vTkltYWpuamJ2c2stM0dxQWZuT1NpVW5pSzlZbEUyV3k5NWd5czlJY3Y4Mk5tUkFBRnRkamhJWW1YeTR2WmdORHhPT01FdEV4RVAzT3JxeXFPM1NlUUNnRVF0MVpHc0Jnd1QwdUdGTlJrRnJRV2tOWU1Wc1ZXOVBLeE5mdk1sREhQTVR3d043dlQ2X18tVDduVlFBb2dzVzd4Y1dZbE1vejVaSlFnMmUwamtWSy1iRERlTUROemo4UnB2c1BYeS1ucXk2dC1NYzlYUm8zYll3WlpqY0RoeTl5RGdQc0xLMlpBS1hKby1VeE90UDVWYnVheEwtanNld2FRampfUWI1WDkzZGg4OUhaSkFJY2d0RUlmWnowM1dvYU4zb0dGQlZOc0NGZkRlZEZtZnZqc05hQlVTQnY2TEpCeXZUaXgtbjdqaVAwU3ZWUERsX0ZXSUJSUS16SzllSnpadC1UU3F6bzJ4ZkxsX2VDVGdJdUlBa1NLSFl1M1lORGxTekJiQ1pSenh4Y0pUbFUxb2dRejU0VXZ5dHdrSVhUUlJIZEtudENzdVo4bXQwWlZSbUZ4dkZqbENKbGpERWE5akFwdFNLWmZSOGwxeDlheGNmTXlqN2RwRy0talZVUk1tOFFoYkNQajNCUjFna1JtQ3JrX0JBeGlnLXBjWl9sbHNBSEJoOXh1UkdhMElEWU12QnowemRIQ3BkQVRJb2tHdDZ0alFBcS1aS2t1b294c3NFbTNXcnNGbUZpOWtaY2tmODc3VkN6aVJQMGV6UVExMGZMTkIydUNCNmR6aFJ0WnFtUW9hWGZoWlFWb3RMbHRGVFNRc1BPN0NEeFI0TFN4SGFqUEUwcFNxMjlNSS1FemMtNnJEbXZwd05WOFBheDdyVjYwdWNJb2ROZ0dTRTV2VlRHaEx5VFowOTN4SnlYdVZTa0NGLXM3SnNQXzREMTBRcmh5NktIbWdTaTJTZjQ1STQwc0dXdzlfdTFVTG5QcG95ZEtORjVhSFJ4NGFfV2lZQmpLN2h3MUJ2Zno0SG9sRVhzUXA2b281NXl6WHc3dTRGemFMU1lpSEt2VmpvSDV5aHUtMG9JZUc4TEhhVXBGeHo2ZHVjNzlsOEI2SFJjY3lvQ01taHRCdWhGcjlCWGdEZ2FrejBWX2c2Z1pZVXczVGR0Zkt1ZU8wZTdNb2E3RmZ0SkZBVFY2OE9hU2xERUVHT3NOYmtEeXVidFlHX29Xc2Z4RU9BWTU0QlB2TV9Jc1RRdGdOV1J4MW1Rc3hUYmFYU0RGcWZsRnhzU1NFelRGd3g2cXVIWUhXZzVGOEMwUmpkNldJdERWNnFZUjlYOVNyWGpuOWRqRzdvMDB4UjhtQzVCUWgwazhQWUMxWlVCRUIxX01BSkF6TWZSaG9vZVFUMjliTmlxY3o5VXJVekpkY1VNOVc2OTdqbkpQSktJTUtWZVF3N3J3PQ==)
      flutter: stable
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
    scripts:
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter config --enable-web
      - flutter build appbundle --release
      - |
        # generate universal apk signed with debug key
        android-app-bundle build-universal-apk \
          --bundle str(Path(project_file, 'build/**/outputs/**/*.aab')) \
          --ks ~/.android/debug.keystore \
          --ks-pass android \
          --ks-key-alias androiddebugkey \
          --key-pass android
      - find . -name "Podfile" -execdir pod install \;
      - flutter build ios --release --no-codesign
      - |
        # build web
        flutter build web --release
        cd build/web
        7z a -r ../web.zip ./*
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - build/web.zip
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - plataformabk@gmail.com
